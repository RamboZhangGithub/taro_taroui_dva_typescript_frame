'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var pluginPlatformWeapp = require('@tarojs/plugin-platform-weapp');

const components = {
    // ======== 调整属性 ========
    Button: {
        'app-packagename': '',
        'app-bundleid': '',
        'app-connect-id': '',
        'group-id': '',
        'public-id': '',
        'share-type': '27',
        'share-mode': '[\'qq\', \'qzone\']',
        'aria-label': '',
        'open-id': '',
        'share-message-friend-info': '',
        bindAddFriend: '',
        bindAddGroupApp: ''
    }
};

const PACKAGE_NAME = '@tarojs/plugin-platform-qq';
class QQ extends pluginPlatformWeapp.Weapp {
    /**
     * 1. setupTransaction - init
     * 2. setup
     * 3. setupTransaction - close
     * 4. buildTransaction - init
     * 5. build
     * 6. buildTransaction - close
     */
    constructor(ctx, config) {
        super(ctx, config);
        this.platform = 'qq';
        this.globalObject = 'qq';
        this.projectConfigJson = 'project.qq.json';
        this.runtimePath = `${PACKAGE_NAME}/dist/runtime`;
        this.fileType = {
            templ: '.qml',
            style: '.qss',
            config: '.json',
            script: '.js',
            xs: '.wxs'
        };
        this.buildTransaction.addWrapper({
            init: this.beforeBuild
        });
    }
    beforeBuild() {
        // 处理 QQ 与微信的组件差异
        this.template.mergeComponents(this.ctx, components);
        this.template.Adapter = {
            if: 'qq:if',
            else: 'qq:else',
            elseif: 'qq:elif',
            for: 'qq:for',
            forItem: 'qq:for-item',
            forIndex: 'qq:for-index',
            key: 'qq:key',
            xs: 'wxs',
            type: 'qq'
        };
    }
}

var index = (ctx) => {
    ctx.registerPlatform({
        name: 'qq',
        useConfigName: 'mini',
        async fn({ config }) {
            const program = new QQ(ctx, config);
            await program.start();
        }
    });
};

exports.QQ = QQ;
exports.default = index;
//# sourceMappingURL=index.js.map
